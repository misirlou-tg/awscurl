name: Build and Push image for Ubuntu 24.04

#
# This uses Docker's GitHub Actions to build and push the image to our Docker Hub repo:
# https://docs.docker.com/build/ci/github-actions/
#
# Also some information in the actions' GitHub repo:
# https://github.com/docker/login-action
# https://github.com/docker/build-push-action
#
# Note: This workflow requires that the Docker Hub username & a personal
# access token (PAT) are configured in GitHub for the repository:
# - Repostory var: DOCKERHUB_USERNAME
# - Repostiory secret: DOCKERHUB_TOKEN
#

on:
  # Runs on pushes targeting master
  push:
    branches:
      - master
  # Pull requests
  pull_request:
  # Allows the ability to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

# Allow one concurrent deployment
concurrency:
  group: "push-docker-hub"
  cancel-in-progress: true

jobs:
  build-push:
    # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
    runs-on: ubuntu-24.04

    env:
      DOCKER_REPO: ${{ vars.DOCKERHUB_USERNAME }}/awscurl

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - run: uname -a

      - name: Starting step summary
        run: echo '## Build and Push summary' >> "$GITHUB_STEP_SUMMARY"

      - name: Set push operation
        id: set-push
        run: |
          if [ '${{ github.event_name }}' = 'pull_request' ]; then
            echo "PR workflow, only building image"
            echo "doPush=false" >> "$GITHUB_OUTPUT"
          else
            echo "Other workflow, build and push image"
            echo "doPush=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Set env.IMAGE_TAG for our docker hub repo
        # https://dev.to/hectorleiva/github-actions-and-creating-a-short-sha-hash-8b7
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          imageTag=${{ env.DOCKER_REPO }}:noble-$calculatedSha
          echo "IMAGE_TAG=$imageTag"
          echo "IMAGE_TAG=$imageTag" >> "$GITHUB_ENV"

      - name: Adding step summary
        run: |
          echo 'Building image with tag: `${{ env.IMAGE_TAG }}`' >> "$GITHUB_STEP_SUMMARY"
          echo 'Performing push: ${{ steps.set-push.outputs.doPush }}' >> "$GITHUB_STEP_SUMMARY"

      # Workaround issue where caching of vcpkg packages does not work
      # (also added VCPKG_BINARY_SOURCES below)
      # https://github.com/lukka/run-cmake/issues/152#issuecomment-2995699875
      # https://github.com/lukka/run-vcpkg/issues/243
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/vcpkg_cache
          key: vcpkg-ubuntu-noble-${{ hashFiles('vcpkg.json', 'vcpkg_overlay/**', 'CMakeLists.txt', 'CMakePresets.json') }}

      # These steps come from https://github.com/marketplace/actions/run-vcpkg
      - name: Install CMake
        uses: lukka/get-cmake@latest
      - name: Run vcpkg
        uses: lukka/run-vcpkg@v11
      - name: Run CMake
        uses: lukka/run-cmake@v10
        env:
          VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/vcpkg_cache,readwrite
        with:
          configurePreset: ci
          buildPreset: ci
          buildPresetAdditionalArgs: "['--config Release']"

      # Login to Docker Hub
      - name: Login to Docker Hub
        if: steps.set-push.outputs.doPush == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Build then push the image
      - name: Build docker image
        run: |
          docker build \
            --tag ${{ env.DOCKER_REPO }}:latest \
            --tag ${{ env.IMAGE_TAG }} \
            .
      - name: Push to Docker Hub
        if: steps.set-push.outputs.doPush == 'true'
        run: docker push ${{ env.IMAGE_TAG }}
      - name: Push latest to Docker Hub
        if: ${{ steps.set-push.outputs.doPush == 'true' && github.ref == 'refs/heads/master' }}
        run: docker push ${{ env.DOCKER_REPO }}:latest

      - name: Archive build artifact
        uses: actions/upload-artifact@v4
        with:
          name: awscurl-ubuntu-noble
          path: build/awscurl
